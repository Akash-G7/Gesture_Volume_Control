import cv2
import time
import numpy as np
import HandTrackingModule as htm
import math
from ctypes import cast, POINTER
from comtypes import CLSCTX_ALL
from pycaw.pycaw import AudioUtilities, IAudioEndpointVolume
url = "http://192.168.86.28:8080/video"
detector = htm.handDetector()

width, height = 640, 480
cap = cv2.VideoCapture(url)
cap.set(3, width)
cap.set(4, height)
prev_time = 0

devices = AudioUtilities.GetSpeakers()
interface = devices.Activate(IAudioEndpointVolume._iid_, CLSCTX_ALL, None)
volume = cast(interface, POINTER(IAudioEndpointVolume))
volRange = volume.GetVolumeRange()
while True:
    success, frame = cap.read()
    frame = detector.findHands(frame)

    list = detector.findPosition(frame, draw=False)
    if len(list) != 0:
        #print(list[4], list[8])

        x1, y1, x2, y2 = list[4][1], list[4][2], list[8][1], list[8][2]
        half_x, half_y = (x1+x2)//2, (y1+y2)//2
        cv2.circle(frame, (x1,y1), 15, (255,0,255), cv2.FILLED)
        cv2.circle(frame, (x2,y2), 15, (255,0,255), cv2.FILLED)
        cv2.line(frame, (x1,y1), (x2,y2),(255,0,255), 3)
        cv2.circle(frame, (half_x,half_y), 15, (255,0,255), cv2.FILLED)

        hypotenuse = math.hypot((x2-x1), (y2-y1))
        #print(hypotenuse)
        #Max = 600, Min = 50
        vol = np.interp(hypotenuse, [50, 500], [volRange[0],volRange[1]])
        print(vol)
        volume.SetMasterVolumeLevel(vol, None)
    curr_time = time.time()
    fps = 1/(curr_time-prev_time)
    prev_time = curr_time

    cv2.putText(frame, f'FPS: {int(fps)}', (40,50), cv2.FONT_HERSHEY_PLAIN, 1, (0,0,255), 2)
    cv2.imshow("Frames", frame)
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break
